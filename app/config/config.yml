imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        google_maps_api_key: '%google.maps_api_key%'
    form_themes:
      - 'SonataCoreBundle:Form:datepicker.html.twig'

# Facebook login Configuration
hwi_oauth:
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_names: [main]
    connect:
        account_connector: app.provider.oauth
        confirmation: false
    resource_owners:
        facebook:
            type:                facebook
            client_id:           %facebook_client_id%
            client_secret:       %facebook_client_secret%
            scope:               "email, public_profile"
            infos_url:           "https://graph.facebook.com/me?fields=id,name,email,picture.type(large)"
            paths:
                email: email
            options:
                display: page
        google:
            type:                google
            client_id:           "Insert Google client ID here"
            client_secret:       "Insert Google client secret here"
            scope:              "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
            paths:
                email: email
                         
# app/config/config.yml
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            translatable: true
            tree: false
            timestampable: true
            loggable: false
            sluggable: false
            
framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            point: CrEOF\Spatial\DBAL\Types\Geometry\PointType
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                dql:
                  numeric_functions:
                    st_distance:     CrEOF\Spatial\ORM\Query\AST\Functions\MySql\STDistance
                    st_distance_sphere:     AppBundle\ORM\Query\AST\Functions\MySql\STDistanceSphere
                    point:     CrEOF\Spatial\ORM\Query\AST\Functions\MySql\Point
                    
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    SonataMediaBundle: ~
                    
sonata_media:
  db_driver: doctrine_orm
  providers:
    image:
      service:    sonata.media.provider.image
      resizer:    sonata.media.resizer.square # sonata.media.resizer.simple
      filesystem: sonata.media.filesystem.local
      cdn:        sonata.media.cdn.server
      generator:  sonata.media.generator.default
      thumbnail:  sonata.media.thumbnail.format
      allowed_extensions: ['jpg', 'png', 'jpeg']
      allowed_mime_types: ['image/pjpeg', 'image/jpeg', 'image/png', 'image/x-png']

  default_context: default
  contexts:
    default:  # the default context is mandatory
      download:
        strategy: sonata.media.security.superadmin_strategy
        mode: http
      providers:
        - sonata.media.provider.dailymotion
        - sonata.media.provider.youtube
        - sonata.media.provider.image
        - sonata.media.provider.file
      formats:
        small: { width: 100 , quality: 70}
        big:   { width: 500 , quality: 70}
  cdn:
    server:
      path:      /uploads/media
  filesystem:
    local:
      directory:  "%kernel.root_dir%/../web/uploads/media"
      create:     false

#  admin_format:   { width: 200 , quality: 90, format: 'jpg'}

#  force_disable_category: true # true, if you really want to disable the relation with category
#  category_manager:       null  # null or "sonata.media.manager.category.default" if classification bundle exists


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_oauth_server:
    db_driver:           orm
    client_class:        AppBundle\Entity\Auth\Client
    access_token_class:  AppBundle\Entity\Auth\AccessToken
    refresh_token_class: AppBundle\Entity\Auth\RefreshToken
    auth_code_class:     AppBundle\Entity\Auth\AuthCode
    service:
        user_provider: fos_user.user_manager             # This property will be used when valid credentials are given to load the user upon access token creation
        
fos_user:
    db_driver: orm
    firewall_name: api                                  # Seems to be used when registering user/reseting password,
                                                        # but since there is no "login", as so it seems to be useless in
                                                        # our particular context, but still required by "FOSUserBundle"
#    firewall_name: main
    user_class: AppBundle\Entity\User

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener:
        enabled: true
        rules:
            - { path: ^/api, priorities: ['json', '*/*'], fallback_format: json, prefer_extension: true }
            - { path: ^/, priorities: ['html', '*/*'], fallback_format: html, prefer_extension: true }            
    versioning: true
    view:
        view_response_listener: 'force'
                            
sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
